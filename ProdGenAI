Run this now, please:
---

### **Final Prompt Template with Autonomous Execution, Flexibility, and File Creation**

---

**Step 1: Enter the Prompt Template**

```plaintext
Given the following problem: [Insert Problem Description Here], please provide a detailed solution that considers the following aspects and utilizes autonomous capabilities for data gathering, preliminary analysis, output generation, and file creation. If the output exceeds the response limit, please indicate with 'Continue' and proceed with the next part of the solution until it is fully addressed. Additionally, use context protection: [Yes/No].

1. Role: Act as [Role] (e.g., prompt engineer, project manager, etc.).
2. Output Format: Deliver the output in [Desired Format] (e.g., textual table, PDF, Word document, source code, etc.). If not specified, output will be delivered as standard text.
3. Source References: Include references for any factual information used.
4. Agentic Workflow: Engage in tasks autonomously, if necessary, to gather additional information, refine the solution, or generate outputs.
5. Revision: Revise the output after initial generation to ensure accuracy, completeness, and adherence to best practices.
6. Reflect on the Output: Assess the quality of the output, suggest improvements, and document the process.
7. Chain of Thought or Tree of Thought: Apply [Chain of Thought/Tree of Thought/Both] reasoning based on the problem's nature to ensure methodical problem-solving. Use CoT for sequential, multi-step problems, ToT for decision-making with multiple outcomes, or both for complex, strategic projects.
8. Interactive Mode: [Yes/No]. If 'Yes', allow for human feedback or continuation between iterative steps. If 'No', proceed with the solution autonomously without requiring feedback unless otherwise specified.
9. Review Control: [Strict/Autonomous]. If 'Strict', ensure all steps, especially revision and reflection, are followed explicitly and documented. If 'Autonomous', allow the AI to decide the necessity and extent of the revision and reflection processes.
10. Output Validation: [Enabled/Disabled]. If 'Enabled', validate the final output to ensure it meets specified criteria, corrects errors, and verifies completeness before delivering.
11. **File Creation**: [Yes/No]. If 'Yes', create a downloadable file based on the output (e.g., C# class, PDF report, etc.) and provide a direct download link.
```

---

**Step 2: Specify Parameters or Run**

```plaintext
Please specify additional parameters if needed, or type "run" to execute the prompt immediately with default settings.

- If you type "run" without specifying parameters or the problem description:
  - I will autonomously generate a random example problem and fill in all parameters based on what seems most appropriate.
  
- If you type "run" after specifying the problem description but without other parameters:
  - I will autonomously fill in the remaining parameters based on the problem provided and execute the solution.

- If something is unclear or you wish to override autonomous decisions, you can specify parameters manually, or type "continue" to proceed with the suggested actions.
```

---

### **Instructions for Using the Updated Prompt Template**

1. **Enter the Prompt Template**: You can fully specify the problem and parameters, leave parts of it blank, or simply type "run" to allow the AI to handle everything autonomously.

2. **Choose How to Execute**:
   - **Run with Defaults**: If you don't provide any details, typing "run" will trigger an autonomously generated problem with all parameters filled in automatically.
   - **Run with Partial Input**: If you specify the problem but leave other parameters blank, I will fill in the gaps and proceed with the solution.
   - **Specify and Run**: If you want to manually control certain aspects, specify those, and I will handle the rest.

3. **Handle Uncertainty**:
   - If a parameter is unclear or it makes sense to let the user decide, I will suggest an action or ask the user to type "continue" to proceed with an autonomous choice.

### **Example of Usage**

- **Example Problem Description**: "Generate a C# class that handles customer data and includes methods for adding, updating, and deleting records."
  
- **User Input**:

```plaintext
run
```

- **Result**:
  - The AI will generate the C# class based on the problem description, create the .cs file, and provide a direct download link for the user.

---

### **Conclusion**

This version of the prompt template provides maximum flexibility, allowing the user to input as little or as much as they want. The AI can then autonomously generate or fill in the missing information, ensuring that the process is as seamless and user-friendly as possible. This approach empowers users to control the depth and specificity of their input while still benefiting from the AIâ€™s autonomous capabilities.
